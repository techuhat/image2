# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - imagetool

on:
  push:
    branches:
      - main
    paths:
      - 'src/backend/**'  # Only trigger when backend changes
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r requirements.txt
        
      - name: Test Backend Application
        run: |
          source venv/bin/activate
          cd src/backend
          python -c "from app import app; print('✅ Flask app imports successfully')"
          python -c "import pdf2docx, fitz, PIL; print('✅ All libraries imported')"

      - name: Prepare deployment package
        run: |
          # Copy backend files for deployment
          mkdir -p deployment-package
          cp -r src/backend/* deployment-package/
          # Copy requirements.txt from root to deployment package
          cp requirements.txt deployment-package/
          
          # Create web.config for Azure App Service
          cat > deployment-package/web.config << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="PythonHandler" path="*" verb="*" modules="httpPlatformHandler" resourceType="Unspecified"/>
              </handlers>
              <httpPlatform processPath="python" arguments="startup.py" stdoutLogEnabled="true" stdoutLogFile=".\logs\python.log" startupTimeLimit="60" requestTimeout="604800">
                <environmentVariables>
                  <environmentVariable name="PYTHONPATH" value="." />
                  <environmentVariable name="PORT" value="8000" />
                </environmentVariables>
              </httpPlatform>
            </system.webServer>
          </configuration>
          EOF

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: deployment-package/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
      
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'imagetool'
          slot-name: 'Production'
          
      - name: Test Deployment
        run: |
          echo "⏳ Waiting for deployment to complete..."
          sleep 60
          
          echo "🧪 Testing backend endpoints..."
          
          # Test ping endpoint
          if curl -f -s "https://imagetool-h4dmewahfmg4bkej.eastasia-01.azurewebsites.net/ping" > /dev/null; then
            echo "✅ Ping endpoint working"
          else
            echo "❌ Ping endpoint failed"
          fi
          
          # Test health endpoint
          if curl -f -s "https://imagetool-h4dmewahfmg4bkej.eastasia-01.azurewebsites.net/health" > /dev/null; then
            echo "✅ Health endpoint working"
          else
            echo "❌ Health endpoint failed"
          fi
          
          echo "🎉 Deployment testing complete!"
